#include <AFMotor.h>

AF_DCMotor motor1(1, MOTOR12_1KHZ);
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

int val;
int Speed = 250;

void setup() {
  Serial.begin(9600);
  Speed = 80;
}

void loop() {
  if (Serial.available() > 0) {
    val = Serial.read();
    Stop(); // Initialize with motors stopped
    
    // Check received command and act accordingly
    switch (val) {
      case 'F':
        forward();
        break;
      case 'B':
        back();
        break;
      case 'L':
        left();
        break;
      case 'R':
        right();
        break;
      case 'I':
        topright();
        break;
      case 'J':
        bottomright();
        break;
      case 'H':
        bottomleft();
        break;
      case 'G':
        topleft();
        break;
      case 'S':
        Stop();
        break;
      case '0':
        Speed = 80;
        break;
      case '1':
        Speed = 120;
        break;
      case '2':
        Speed = 143;
        break;
      case '3':
        Speed = 155;
        break;
      case '4':
        Speed = 178;
        break;
      case '5':
        Speed = 181;
        break;
      case '6':
        Speed = 204;
        break;
      case '7':
        Speed = 216;
        break;
      case '8':
        Speed = 229;
        break;
      case '9':
        Speed = 240;
        break;
      case 'q':
        Speed = 250;
        break;
    }
  }
}

void forward() {
  motor1.setSpeed(Speed);
  motor1.run(FORWARD);
  motor2.setSpeed(Speed);
  motor2.run(FORWARD);
  motor3.setSpeed(Speed);
  motor3.run(FORWARD);
  motor4.setSpeed(Speed);
  motor4.run(FORWARD);
}

void back() {
  motor1.setSpeed(Speed);
  motor1.run(BACKWARD);
  motor2.setSpeed(Speed);
  motor2.run(BACKWARD);
  motor3.setSpeed(Speed);
  motor3.run(BACKWARD);
  motor4.setSpeed(Speed);
  motor4.run(BACKWARD);
}

void left() {
  motor1.setSpeed(Speed);
  motor1.run(BACKWARD);
  motor2.setSpeed(Speed);
  motor2.run(BACKWARD);
  motor3.setSpeed(Speed);
  motor3.run(FORWARD);
  motor4.setSpeed(Speed);
  motor4.run(FORWARD);
}

void right() {
  motor1.setSpeed(Speed);
  motor1.run(FORWARD);
  motor2.setSpeed(Speed);
  motor2.run(FORWARD);
  motor3.setSpeed(Speed);
  motor3.run(BACKWARD);
  motor4.setSpeed(Speed);
  motor4.run(BACKWARD);
}

void topleft() {
  motor1.setSpeed(Speed);
  motor1.run(FORWARD);
  motor2.setSpeed(Speed);
  motor2.run(FORWARD);
  motor3.setSpeed(Speed / 3.1);
  motor3.run(FORWARD);
  motor4.setSpeed(Speed / 3.1);
  motor4.run(FORWARD);
}

void topright() {
  motor1.setSpeed(Speed / 3.1);
  motor1.run(FORWARD);
  motor2.setSpeed(Speed / 3.1);
  motor2.run(FORWARD);
  motor3.setSpeed(Speed);
  motor3.run(FORWARD);
  motor4.setSpeed(Speed);
  motor4.run(FORWARD);
}

void bottomleft() {
  motor1.setSpeed(Speed);
  motor1.run(BACKWARD);
  motor2.setSpeed(Speed);
  motor2.run(BACKWARD);
  motor3.setSpeed(Speed / 3.1);
  motor3.run(BACKWARD);
  motor4.setSpeed(Speed / 3.1);
  motor4.run(BACKWARD);
}

void bottomright() {
  motor1.setSpeed(Speed / 3.1);
  motor1.run(BACKWARD);
  motor2.setSpeed(Speed / 3.1);
  motor2.run(BACKWARD);
  motor3.setSpeed(Speed);
  motor3.run(BACKWARD);
  motor4.setSpeed(Speed);
  motor4.run(BACKWARD);
}

void Stop() {
  motor1.setSpeed(0);
  motor1.run(RELEASE);
  motor2.setSpeed(0);
  motor2.run(RELEASE);
  motor3.setSpeed(0);
  motor3.run(RELEASE);
  motor4.setSpeed(0);
  motor4.run(RELEASE);
}
